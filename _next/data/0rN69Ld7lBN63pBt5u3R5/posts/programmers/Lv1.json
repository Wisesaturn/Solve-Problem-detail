{"pageProps":{"allPostsData":[{"id":"01 - 로또의 최고 순위와 최저 순위","detail":"\r  문제 설명\r \r  https://programmers.co.kr/learn/courses/30/lessons/77484\r \r  언어\r \r C++\r \r  ❗ 풀이\r \r  📌사고 과정\r \r 1. 입력 배열과 당첨 배열을 parameter로 받는다.\r 2. 크기 2의 최저 순위와 최고 순위값을 넣을 result vector를 선언한다.\r  굳이 vector가 아니어도 일반 변수를 선언해도 상관 없다.\r 3. for 중첩문을 활용한다.\r \r  최고 순위 파악\r \r 1. 첫 번째 for문에서는 최고 순위일 때를 Count한다.\r 2. (it != winnums.end() || lottos[j] == 0의 조건은 다음과 같다.\r - 알아볼 수 없는 숫자가 나올 때 (0의 입력값일 때)\r - iterator를 통해 값을 찾을 수 없지 않을 때 (== 값이 있을 때)\r   만약, 값이 없다면 당첨된 번호가 아닌 것이다.\r 3. 이 과정을 통해 최고 순위를 Count한다.\r \r  최저 순위 파악\r \r 1. 두 번째 for문에서는 최저 순위일 때를 Count한다.\r 2. it != winnums.end()의 조건은 다음과 같다.\r - iterator를 통해 값을 찾을 수 없지 않을 때 (== 값이 있을 때)\r   만약, 값이 없다면 당첨된 번호가 아닌 것이다.\r 3. 이 과정을 통해 최저 순위를 Count한다.\r \r  Count한 숫자로 순위 매기기\r \r 1. 각각 순위 파악이 끝나면 Count한 값을 통해 순위를 매긴다.\r 2. result[i] = (result[i] - 7)  -1;의 조건은 다음과 같다.\r - Count한 값이 많을수록 순위는 높아진다. 다르게 말하면, 순위값은 낮아진다. (1등 = 1의 값)\r - Count한 값을 역순으로 돌리면 쉽게 순위값을 얻을 수 있다.\r - Count한 값을 역순으로 만들되 1  6의 범위가 나올 수 있도록 한다.\r - Count한 값 -7 (0  6 범위에서 -7  -1로 변경)\r - 해당 값에 -1을 곱한다 (1  7의 범위로 변경)\r - 이 때 -7은 순위에 포함되지 않으므로 Count 값이 0일 때를 따로 부여한다. (Count 값이 0일 경우 순위는 6위)\r \r  결과\r \r cpp\r include string\r include vector\r include algorithm\r \r using namespace std;\r \r vectorint solution(vectorint lottos, vectorint winnums)\r {\r vectorint result(2);\r vectorint::iterator it;\r \r for (sizet i = 0; i  2; i++)\r {\r for (sizet j = 0; j  6; j++)\r {\r \r it = find(winnums.begin(), winnums.end(), lottos[j]);\r \r if (i == 0)\r { // 최고일 때\r if (it != winnums.end() || lottos[j] == 0)\r result[i]++;\r }\r else\r { // 최저일 때\r if (it != winnums.end())\r result[i]++;\r }\r }\r if (result[i] != 0)\r result[i] = (result[i] - 7)  -1;\r else\r result[i] = 6;\r }\r return result;\r }\r \r ","title":"로또의 최고 순위와 최저 순위","date":"2022-02-14 15:07:00","tags":["programmers","Level 1"],"categories":"Programmers"}]},"__N_SSG":true}