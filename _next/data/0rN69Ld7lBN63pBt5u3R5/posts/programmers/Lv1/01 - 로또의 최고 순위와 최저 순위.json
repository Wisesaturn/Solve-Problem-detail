{"pageProps":{"postData":{"id":"01 - 로또의 최고 순위와 최저 순위","contentHTML":"<h3>문제 설명</h3>\n<blockquote>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/77484\">https://programmers.co.kr/learn/courses/30/lessons/77484</a></p>\n</blockquote>\n<h3>언어</h3>\n<p><code>C++</code></p>\n<h2>❗ 풀이</h2>\n<h4>📌사고 과정</h4>\n<ol>\n<li>입력 배열과 당첨 배열을 <code>parameter</code>로 받는다.</li>\n<li>크기 <code>2</code>의 최저 순위와 최고 순위값을 넣을 <strong>result</strong> vector를 선언한다.\n<blockquote>\n<p>굳이 vector가 아니어도 일반 변수를 선언해도 상관 없다.</p>\n</blockquote>\n</li>\n<li>for 중첩문을 활용한다.</li>\n</ol>\n<h4>최고 순위 파악</h4>\n<ol>\n<li>첫 번째 for문에서는 <strong>최고 순위</strong>일 때를 Count한다.</li>\n<li><code>(it != win_nums.end() || lottos[j] == 0</code>의 조건은 다음과 같다.\n<ul>\n<li>알아볼 수 없는 숫자가 나올 때 (0의 입력값일 때)</li>\n<li><code>iterator</code>를 통해 값을 찾을 수 없지 않을 때 (== 값이 있을 때)\r\n만약, 값이 없다면 당첨된 번호가 아닌 것이다.</li>\n</ul>\n</li>\n<li>이 과정을 통해 <strong>최고 순위</strong>를 Count한다.</li>\n</ol>\n<h4>최저 순위 파악</h4>\n<ol>\n<li>두 번째 for문에서는 <strong>최저 순위</strong>일 때를 Count한다.</li>\n<li><code>it != win_nums.end()</code>의 조건은 다음과 같다.\n<ul>\n<li><code>iterator</code>를 통해 값을 찾을 수 없지 않을 때 (== 값이 있을 때)\r\n만약, 값이 없다면 당첨된 번호가 아닌 것이다.</li>\n</ul>\n</li>\n<li>이 과정을 통해 <strong>최저 순위</strong>를 Count한다.</li>\n</ol>\n<h4>Count한 숫자로 순위 매기기</h4>\n<ol>\n<li>각각 순위 파악이 끝나면 <em>Count</em>한 값을 통해 순위를 매긴다.</li>\n<li><code>result[i] = (result[i] - 7) * -1;</code>의 조건은 다음과 같다.\n<ul>\n<li>Count한 값이 많을수록 순위는 높아진다. 다르게 말하면, 순위값은 낮아진다. <code>(1등 = 1의 값)</code></li>\n<li>Count한 값을 역순으로 돌리면 쉽게 순위값을 얻을 수 있다.</li>\n<li>Count한 값을 역순으로 만들되 <strong>1 ~ 6</strong>의 범위가 나올 수 있도록 한다.</li>\n<li>Count한 값 -7 (<code>0 ~ 6</code> 범위에서 <code>-7 ~ -1</code>로 변경)</li>\n<li>해당 값에 -1을 곱한다 (<code>1 ~ 7</code>의 범위로 변경)</li>\n<li>이 때 <strong>-7</strong>은 순위에 포함되지 않으므로 Count 값이 0일 때를 따로 부여한다. (<code>Count 값이 0일 경우 순위는 6위</code>)</li>\n</ul>\n</li>\n</ol>\n<h2>결과</h2>\n<div class=\"remark-highlight\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&#x3C;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&#x3C;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&#x3C;algorithm></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nvector<span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> lottos<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> win_nums<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    vector<span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    vector<span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token double-colon punctuation\">::</span>iterator it<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n\n            it <span class=\"token operator\">=</span> <span class=\"token function\">find</span><span class=\"token punctuation\">(</span>win_nums<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> win_nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lottos<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 최고일 때</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>it <span class=\"token operator\">!=</span> win_nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> lottos<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 최저일 때</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>it <span class=\"token operator\">!=</span> win_nums<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n","title":"로또의 최고 순위와 최저 순위","date":"2022-02-14 15:07:00","tags":["programmers","Level 1"],"categories":"Programmers"}},"__N_SSG":true}